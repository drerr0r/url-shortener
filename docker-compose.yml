version: '3.8'

services:
  # Основные приложения
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
        - SERVER_PORT=8080
        - DB_HOST=postgres
        - DB_PORT=5432
        - DB_NAME=urlshortner
        - DB_USER=postgres
        - DB_PASSWORD=password
        - APP_BASE_URL=http://localhost:8080
    depends_on:
        - postgres
        - redis
    restart: unless-stopped
    networks:
        - app-network 

  postgres:
      image: postgres:15-alpine
      environment:
        - POSTGRES_DB=urlshortner
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=password
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./migrations:/docker-entrypoint-initdb.d
      networks:
        -app-network:
      restart: unless-stopped
      healthcheck:
        test: ["CMD-SHELL", "pg_isready - U postgres"]
        interval: 5s
        timeout: 5s

    # Redis для кэширования (может пригодиться в будущем)
  redis:
      image: redis:7-alpine
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
      networks:           
        - app-network
      restart: unless-stopped
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        timeout: 5s
        retries: 5

    # pgAdmin для управления БД (опцианально)
  pgadmin:
      image: dpage/pgadmin4
      environment:
        - PGADMIN_DEFAULT_EMAIL=admin@example.com
        - PGADMIN_DEFAULT_PASSWORD=admin
      ports:
        - "5050:80"
      depends_on:
        - postgres
      networks:
        - app-network
      restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: brige